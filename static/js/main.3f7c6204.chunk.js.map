{"version":3,"sources":["components/private/ApiUtils.js","components/private/Settings.js","components/private/Navbar.js","components/private/TweetCard.js","components/private/TweetForm.js","hooks/UseAuth.js","components/private/TweetList.js","components/private/SearchBar.js","components/private/UserFollow.js","components/private/UserList.js","components/private/TrendList.js","components/private/Home.js","components/public/RegisterForm.js","components/public/LoginForm.js","components/public/LandingPage.js","components/private/ProfileList.js","components/private/Profile.js","components/public/NotFound.js","RouterConfig.js","App.js","reportWebVitals.js","index.js"],"names":["ApiUtils","path","method","body","Promise","resolve","reject","itemToken","localStorage","getItem","fetch","headers","Authorization","JSON","stringify","then","res","json","catch","error","Settings","props","useState","name","setName","bio","setBio","avatar","setAvatar","distractionMode","setDistractionMode","useEffect","getElements","checkMode","console","log","Modal","aria-labelledby","Header","closeButton","Title","id","Body","className","Container","Row","Col","xs","md","Form","onSubmit","e","preventDefault","setItem","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Check","checked","Button","variant","Navbar","modalShow","setModalShow","Nav","defaultActiveKey","Link","href","eventKey","icon","faHome","faSearch","faBell","onClick","faCogs","show","onHide","TweetCard","tweetsitem","_id","key","text","created","creator","updated","tags","userId","like","setLike","liked","setLiked","loadingAlreadyLiked","setLoadingAlreadyLiked","alreadyLiked","find","users","triggerLike","unlikeTweet","likeTweet","Card","username","moment","fromNow","size","disabled","faHeart","faHeartoutline","faComment","faRetweet","faUpload","TweetForm","fetchTweets","setText","tweetInput","useRef","alert","current","ref","required","AuthContext","createContext","useAuth","useContext","AuthProvider","children","token","setToken","salvaToken","chiamaToken","Provider","TweetList","tweetList","tweets","setTweets","setOrderedTweets","direction","t","sort","a","b","Date","getTime","listUpdate","map","SearchBar","searchTerm","setSearchTerm","history","useHistory","push","InputGroup","Append","UserFollow","followersCount","followingCount","followers","following","fetchUser","alreadyFollowed","setAlreadyFollowed","found","follow","unfollow","sm","Image","style","width","height","src","roundedCircle","to","split","UserList","userList","setUserList","setOrderedUsers","u","user","index","TrendList","setTags","processTags","tagList","tweetItem","length","i","newTagList","_","countBy","newArray","Object","keys","count","ListGroup","tagItem","Item","Home","setTweetList","q","useParams","RegisterForm","setUsername","password","setPassword","Text","label","Footer","LoginForm","LandingPage","Profilelist","setFollowersCount","Math","random","listTweets","getProfile","profileData","qualcosa","Img","Profile","ProfileList","NotFound","RouterConfig","basename","process","exact","locale","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f7c6204.chunk.js","sourcesContent":["const ApiUtils = (path, method = \"GET\", body) =>\n  new Promise((resolve, reject) => {\n    const itemToken = localStorage.getItem(\"token\");\n\n    if (itemToken) {\n      fetch(`https://secret-temple-42258.herokuapp.com/${path}/`, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${itemToken}`,\n        },\n        body: JSON.stringify(body) \n      })\n        .then((res) => res.json())\n        .then((json) => resolve(json))\n        .catch((error)=> reject(error))\n    } else{\n        reject(\"non c'è il token\")\n    }\n  });\n\n  export default ApiUtils;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Modal, Container, Row, Col } from \"react-bootstrap\";\nimport ApiUtils from \"./ApiUtils\";\n\nconst Settings = (props) => {\n  const [name, setName] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [distractionMode, setDistractionMode] = useState(false);\n\n  useEffect(() => {\n    getElements();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    ApiUtils(\"users/profile\", \"PUT\", { name, bio, avatar }).then((json) => {});\n    console.log(distractionMode);\n    localStorage.setItem(\"distractionMode\", true);\n  };\n  const getElements = () => {\n    ApiUtils(\"users/profile\", \"GET\").then((json) => {\n      setName(json.name);\n      setBio(json.bio);\n      setAvatar(json.avatar);\n      const checkMode = localStorage.getItem(\"distractionMode\");\n      console.log(checkMode);\n      setDistractionMode(checkMode === \"\" ? false : checkMode);\n    });\n  };\n  return (\n    <div>\n      <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\">\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Modifica le tue info\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"show-grid\">\n          <Container>\n            <Row>\n              <Col xs={12} md={8}>\n                <Form onSubmit={onSubmit}>\n                  <Form.Group controlId=\"formBasicName\">\n                    <Form.Label>Enter your name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Enter your name\"\n                      onChange={(e) => setName(e.target.value)}\n                      value={name}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicBio\">\n                    <Form.Label>Write something about you</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Write something about you\"\n                      onChange={(e) => setBio(e.target.value)}\n                      value={bio}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicAvatar\">\n                    <Form.Label>Change your avatar</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Change your avatar\"\n                      onChange={(e) => setAvatar(e.target.value)}\n                      value={avatar}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicFlag\">\n                    <Form.Label>Modalità distraction free</Form.Label>\n                    <Form.Check\n                      onChange={(e) => setDistractionMode(e.target.checked)}\n                      checked={distractionMode}\n                      type=\"checkbox\"\n                    />\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport {\n  faHome,\n  faSearch,\n  faBell,\n  faCogs,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Settings from \"./Settings\";\n\nexport default function Navbar() {\n  const [modalShow, setModalShow] = useState(false);\n  const openSettings = (e) => {\n    e.preventDefault();\n    setModalShow(true);\n  };\n  return (\n    <div>\n      <Nav defaultActiveKey=\"/home\" className=\"flex-column navbar\">\n        <Nav.Link href=\"/home\" className=\"font-weight-bold\" eventKey=\"link-1\">\n          <FontAwesomeIcon icon={faHome} />\n          <p className=\"d-none d-sm-none d-md-block\">Home</p>\n        </Nav.Link>\n        <Nav.Link className=\"font-weight-bold\" eventKey=\"link-2\">\n          <FontAwesomeIcon icon={faSearch} />\n          <p className=\"d-none d-sm-none d-md-block\">Esplora</p>\n        </Nav.Link>\n        <Nav.Link className=\"font-weight-bold\" eventKey=\"link-2\">\n          <FontAwesomeIcon icon={faBell} />\n          <p className=\"d-none d-sm-none d-md-block\">Notifiche</p>\n        </Nav.Link>\n        <Nav.Link\n          className=\"font-weight-bold\"\n          eventKey=\"link-2\"\n          onClick={openSettings}\n        >\n          <FontAwesomeIcon icon={faCogs} />\n          <p className=\"d-none d-sm-none d-md-block\">Impostazioni</p>\n        </Nav.Link>\n      </Nav>\n      <Settings show={modalShow} onHide={() => setModalShow(false)} />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport {\n  faHeart,\n  faComment,\n  faRetweet,\n  faUpload,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as faHeartoutline } from \"@fortawesome/free-regular-svg-icons\";\nimport ApiUtils from \"./ApiUtils\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function TweetCard({ tweetsitem, key }) {\n  const { _id, text, created, updated, tags, creator } = tweetsitem;\n  const userId = localStorage.getItem(\"userId\");\n  const [like, setLike] = useState(0);\n  const [liked, setLiked] = useState([]);\n  const [loadingAlreadyLiked, setLoadingAlreadyLiked] = useState(null);\n\n  // Con questo useffect settiamo lo stato iniziale del nostro tweet, e rispondiamo ad eventuali cambiamenti\n  useEffect(() => {\n    setLike(tweetsitem.like);\n    setLiked(tweetsitem.liked);\n  }, [tweetsitem]);\n\n  // con find troviamo se nella lista utenti dentro tweetsitem.liked c'è il nostro user ID\n  const alreadyLiked = liked.find((users) => {\n    return users.id === userId;\n  });\n\n  // BUG: se si clicca velocemente partono diverse chiamate e finisce in errore\n  // Una soluzione potrebbe essere disabilitare con uno stato il pulsante mentre la chiamata è in carso (in caso mettere un icona di caricamento)\n  const triggerLike = () => {\n    // Se esiste allora procediamo con unlike, senno con un like\n    if (alreadyLiked) {\n      unlikeTweet();\n      setLoadingAlreadyLiked(false);\n    } else {\n      likeTweet();\n      setLoadingAlreadyLiked(true);\n    }\n  };\n\n  const likeTweet = () => {\n    ApiUtils(`tweets/like/${_id}`, \"POST\").then((json) => {\n      setLike(json.like);\n      setLiked(json.liked);\n      setLoadingAlreadyLiked(null);\n    });\n  };\n\n  const unlikeTweet = () => {\n    ApiUtils(`tweets/unlike/${_id}`, \"POST\").then((json) => {\n      setLike(json.like);\n      setLiked(json.liked);\n      setLoadingAlreadyLiked(null);\n    });\n  };\n\n  const renderIcon = () =>{\n      if(loadingAlreadyLiked !== null){\n        if(loadingAlreadyLiked){\n          return faHeart\n        }\n        return faHeartoutline\n      };\n      \n      if (alreadyLiked){\n        return faHeart\n      }\n      return faHeartoutline;\n  \n  }\n\n  return (\n    <div className=\"mb-2 mt-2\">\n      <Card>\n        <Card.Body>\n          <div className=\"tweet-info\">\n            <p>\n              <b>\n                {creator.name} {creator.username}\n              </b>\n              <span className=\"text-muted\">\n                {\" - \"}\n                {moment(created).fromNow()}\n              </span>\n            </p>\n          </div>\n\n          <div className=\"text-left mb-4 mt-2\"> {text} </div>\n\n          <div className=\"tweet-icon-container\">\n            {/* Non è mai una buona pratica usare onClick su un elemento diverso da button, in questo caso ho racchiuso le icon dentro i bnutton di Bootstrap */}\n            <Button\n              size=\"sm\"\n              onClick={triggerLike}\n              disabled={loadingAlreadyLiked !== null}\n            >\n              <FontAwesomeIcon\n                size=\"xs\"\n                icon={renderIcon()}\n              />{\" \"}\n              {like}\n            </Button>\n            <Button size=\"sm\" onClick={triggerLike}>\n              <FontAwesomeIcon size=\"xs\" icon={faComment} />\n            </Button>\n            <Button size=\"sm\" onClick={triggerLike}>\n              <FontAwesomeIcon size=\"xs\" icon={faRetweet} />\n            </Button>\n            <Button size=\"sm\" onClick={triggerLike}>\n              <FontAwesomeIcon size=\"xs\" icon={faUpload} />\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card } from \"react-bootstrap\";\n// import \"../../styles/HomePage.css\";\nimport ApiUtils from \"./ApiUtils\";\n\nexport default function TweetForm({ fetchTweets }) {\n  const [text, setText] = useState(\"\");\n\n  const tweetInput = useRef(null);\n\n  const newTweet = (e) => {\n    e.preventDefault();\n    if (e.target.value !== \"\" && text !== \"\") {\n      ApiUtils(\"tweets\", \"POST\", { text }).then((json) => {\n        fetchTweets();\n        setText(\"\");\n        tweetInput.current.value = \"\";\n      });\n    } else {\n      return alert(\"scrivi il cazzo di tweet\");\n    }\n  };\n\n  return (\n    <div>\n      <Card>\n        <Form className=\"form-tweet\" onSubmit={newTweet}>\n          <Form.Group className=\"form-text\">\n            <Form.Control\n              ref={tweetInput}\n              type=\"text\"\n              placeholder=\"scrivi un tweet\"\n              required=\"required\"\n              onChange={(e) => setText(e.target.value)}\n            />\n          </Form.Group>\n          <div className=\"form-footer-btn\">\n            <Button className=\"btn-tweet\" type=\"submit\">\n              tweet\n            </Button>\n          </div>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\n\nexport const AuthContext = createContext({});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(\"\");\n\n  useEffect(() => {\n    if (token) {\n      salvaToken(token);\n    }\n  }, [token]);\n\n  useEffect(() => {\n    chiamaToken();\n  }, []);\n\n  const salvaToken = (token) => {\n    localStorage.setItem(\"token\", `${token}`);\n  };\n\n  const chiamaToken = () => {\n    const itemToken = localStorage.getItem(\"token\");\n    if (itemToken !== \"\") {\n      setToken(itemToken);\n    } else {\n      console.log(\"token non trovato\");\n    }\n  };\n  return (\n    <AuthContext.Provider value={{ token, setToken }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport TweetCard from \"./TweetCard\";\nimport ApiUtils from \"./ApiUtils\";\nimport TweetForm from \"./TweetForm\";\nimport { useAuth } from \"../../hooks/UseAuth\";\n\nexport default function TweetList({ tweetList, fetchTweets }) {\n  const [tweets, setTweets] = useState([]);\n\n  const { token } = useAuth();\n\n  useEffect(() => {\n    setOrderedTweets(tweetList);\n  }, [token, tweetList]);\n\n  const setOrderedTweets = (tweets, direction = 1) => {\n    const t = tweets.sort((a, b) => {\n      return new Date(a.created).getTime() < new Date(b.created).getTime()\n        ? direction\n        : -direction;\n    });\n    setTweets(t);\n  };\n\n  const listUpdate = () => {\n    ApiUtils(\"tweets/feed\").then((json) => setOrderedTweets(json));\n  };\n\n  return (\n    <div>\n      <TweetForm listUpdate={listUpdate} fetchTweets={fetchTweets} />\n\n      {tweets.map((tweetsitem) => (\n        <TweetCard tweetsitem={tweetsitem} key={tweetsitem.id} />\n      ))}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\nimport SearchResults from \"./SearchResults\";\nimport { useHistory } from \"react-router-dom\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const history = useHistory();\n\n  const onSearch = (e) => {\n    e.preventDefault();\n    if (searchTerm) {\n      history.push(`/search/${searchTerm}`);\n    }\n  };\n  return (\n    <div className=\"search-bar mt-4\">\n      <Form onSubmit={onSearch}>\n        <InputGroup controlId=\"formBasicEmail\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"cerca\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <InputGroup.Append>\n            <Button variant=\"primary\">\n              <FontAwesomeIcon icon={faSearch} />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form>\n      {/* <SearchResults /> */}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Image, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ApiUtils from \"./ApiUtils\";\n\nexport default function UserFollow({\n  username,\n  followingCount,\n  followersCount,\n  id,\n  avatar,\n  following,\n  followers,\n  fetchUser,\n}) {\n  const [alreadyFollowed, setAlreadyFollowed] = useState(false);\n  const userId = localStorage.getItem(\"userId\");\n\n  useEffect(() => {\n    const found = followers.find((id) => {\n      return id === userId;\n    });\n    setAlreadyFollowed(found);\n  }, [id]);\n\n  const triggerFollow = () => {\n    if (alreadyFollowed) {\n      unfollow();\n    } else {\n      follow();\n    }\n  };\n\n  const follow = () => {\n    ApiUtils(`users/follow/${id}`, \"POST\").then((json) => {\n      setAlreadyFollowed(true);\n      fetchUser();\n    });\n  };\n\n  const unfollow = () => {\n    ApiUtils(`users/unfollow/${id}`, \"POST\").then((json) => {\n      setAlreadyFollowed(false);\n      fetchUser();\n    });\n  };\n\n  return (\n    <Row className=\"d-flex flex-row justify-content-between mb-4 align-items-center\">\n      <Col>\n        <Row\n          xs={12}\n          sm={12}\n          md={10}\n          className=\"d-flex flex-row text-left align-items-center\"\n        >\n          <Col xs={2} md={3}>\n            <Image\n              style={{ width: 30, height: 30 }}\n              className=\"mr-4\"\n              src={avatar}\n              roundedCircle\n            />\n          </Col>\n\n          <Col xs={10} md={9}>\n            <Link to={`/profile/${id}`}>\n            <p className=\"nome-user mb-0\">\n              {username.split(\"@\")[0]}\n            </p>\n            </Link>\n            <p>followers: {followersCount}</p>\n          </Col>\n        </Row>\n      </Col>\n      <Col>\n        <Row md={12}>\n          <Col xs={12} md={12} sm={12}>\n            <Button\n              className=\"follow-button\"\n              size=\"sm\"\n              variant=\"outline-info\"\n              onClick={triggerFollow}\n            >\n              {alreadyFollowed ? \"unfollow\" : \"Follow\"}\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport ApiUtils from \"./ApiUtils.js\";\nimport UserFollow from \"./UserFollow.js\";\n\nexport default function UserList() {\n  const [userList, setUserList] = useState([]);\n\n  const fetchUser = () => {\n    ApiUtils(`users`).then((json) => setOrderedUsers(json));\n  };\n\n  const setOrderedUsers = (users, direction = 1) => {\n    const u = users.sort((a, b) => {\n      return a.followersCount < b.followersCount ? direction : -direction;\n    });\n    setUserList(u);\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  console.log(userList);\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title className=\"mb-4\">Profili da seguire</Card.Title>\n        {userList.map((user, index) => (\n          <UserFollow\n            user={user}\n            username={user.username}\n            following={user.following}\n            followingCount={user.followingCount}\n            followersCount={user.followersCount}\n            id={user.id}\n            avatar={`https://i.pravatar.cc/30?img=${index + 1}`}\n            key={index}\n            followers={user.followers}\n            fetchUser={fetchUser}\n          />\n        ))}\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { ListGroup, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nconst TrendList = ({ tweetList }) => {\n  const [tags, setTags] = useState([]);\n  useEffect(() => {\n    processTags(tweetList);\n  }, [tweetList]);\n\n  const processTags = (json) => {\n    const tagList = [];\n    json.map((tweetItem) => {\n      if (tweetItem.tags.length > 0) {\n        for (let i = 0; i < tweetItem.tags.length; i++) {\n          tagList.push(tweetItem.tags[i]);\n        }\n      }\n    });\n\n    const newTagList = _.countBy(tagList);\n\n    const newArray = Object.keys(newTagList).map((key) => {\n      return { id: key, name: key, count: newTagList[key] };\n    });\n    setTags(newArray);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title className=\"mb-4\">Tendenze</Card.Title>\n        <ListGroup>\n          {tags.map((tagItem) => (\n            <ListGroup.Item key={tagItem.id}>\n              <Link to={`/search/${tagItem.name.split(\"#\")[1]}`}>{tagItem.name} {tagItem.count}</Link>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n};\nexport default TrendList;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Navbar from \"./Navbar\";\nimport TweetList from \"./TweetList\";\nimport SearchBar from \"./SearchBar\";\nimport UserList from \"./UserList\";\nimport TrendList from \"./TrendList\";\nimport ApiUtils from \"./ApiUtils\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Home() {\n  const [tweetList, setTweetList] = useState([]);\n  const { q } = useParams();\n\n  const fetchTweets = () => {\n    if (q) {\n      ApiUtils(`tweets/tag/${q}`).then((json) => {\n        setTweetList(json);\n      });\n    } else {\n      ApiUtils(\"tweets/feed\").then((json) => {\n        setTweetList(json);\n      });\n    }\n  };\n  \n  useEffect(() => {\n    fetchTweets();\n  }, [q]);\n  \n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col md={2} sm={1} xs={2}>\n            <Navbar />\n          </Col>\n          <Col md={6} sm={8} xs={10}>\n            <TweetList tweetList={tweetList} fetchTweets={fetchTweets} />\n          </Col>\n          <Col md={4} className=\"d-none d-md-block d-lg-block\">\n            <div className=\"mb-4\">\n              <SearchBar />\n            </div>\n            <div className=\"mb-4\">\n              <TrendList tweetList={tweetList} />\n            </div>\n            <div>\n              <UserList />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Container, Row, Col, Modal, Button, Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function RegisterForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const signup = () => {\n    fetch(\"https://secret-temple-42258.herokuapp.com/auth/signup\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.user.id) {\n          props.onHide();\n        } else {\n          alert(\"non sei registrato\");\n        }\n      });\n  };\n  return (\n    <div>\n      <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\">\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Register here\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"show-grid\">\n          <Container>\n            <Row>\n              <Col xs={12} md={8}>\n                <Form>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"user name\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <Form.Text className=\"text-muted\">\n                      We'll never share your email with anyone else.\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                  </Form.Group>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\" onClick={signup}>\n            Register\n          </Button>\n\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport RegisterForm from \"./RegisterForm\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/UseAuth\";\n\nexport default function LoginForm() {\n  const [modalShow, setModalShow] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const { token, setToken } = useAuth();\n\n  const registerPres = (e) => {\n    e.preventDefault();\n    setModalShow(true);\n  };\n\n  const login = (e) => {\n    e.preventDefault();\n    fetch(\"https://secret-temple-42258.herokuapp.com/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.token) {\n          setToken(json.token);\n          localStorage.setItem(\"userId\", json.user.id);\n          history.push(\"/home\");\n        } else {\n          alert(\"non sei registrato\");\n        }\n      });\n  };\n\n  return (\n    <div>\n      <Form onSubmit={login}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter email\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\n        </Form.Group>\n        <div className=\"btn-container\">\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n\n          <Button variant=\"primary\" type=\"button\" onClick={registerPres}>\n            Register\n          </Button>\n          <RegisterForm show={modalShow} onHide={() => setModalShow(false)} />\n        </div>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\n// import \"../../styles/LandingPage.css\";\nimport LoginForm from \"./LoginForm\";\n\nexport default function LandingPage() {\n  return (\n    <Container className=\"landing-container\">\n      <Row className=\"landing-row\">\n        <Col md={6} sm={12} className=\"landing-col\">\n          <Row>\n            <Col className=\"d-flex justify-content-center \">\n              <div className=\"form-div\">\n                <LoginForm />\n              </div>\n            </Col>\n          </Row>\n        </Col>\n        <Col md={6} sm={12} className=\"landing-col\">\n          <div className=\"sfondolanding\"></div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ApiUtils from \"./ApiUtils\";\nimport TweetCard from \"./TweetCard\";\nimport { Card, Button, Image } from \"react-bootstrap\";\nimport { useAuth } from \"../../hooks/UseAuth\";\n\nconst Profilelist = ({ id }) => {\n  const [tweets, setTweets] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [followersCount, setFollowersCount] = useState(0);\n  const userId = localStorage.getItem(\"userId\");\n  const avatar = \"https://i.pravatar.cc/30?img=\" + Math.random();\n  const [alreadyFollowed, setAlreadyFollowed] = useState(false);\n  const { token } = useAuth();\n\n  useEffect(() => {\n    listTweets();\n    getProfile();\n  }, [token]);\n\n  const getProfile = () => {\n    ApiUtils(`users`).then((json) => {\n      const profileData = json.find((users) => {\n        return users.id === id;\n      });\n      setUsername(profileData.username);\n      setFollowersCount(profileData.followersCount);\n      const qualcosa = profileData.followers.find((id) => {\n        return id === userId;\n      });\n      setAlreadyFollowed(qualcosa);\n    });\n  };\n\n  const listTweets = () => {\n    ApiUtils(`tweets/${id}`).then((json) => setOrderedTweets(json));\n  };\n  const triggerFollow = () => {\n    if (alreadyFollowed) {\n      unfollow();\n    } else {\n      follow();\n    }\n  };\n\n  const follow = () => {\n    ApiUtils(`users/follow/${id}`, \"POST\").then((json) => console.log(json));\n  };\n\n  const unfollow = () => {\n    ApiUtils(`users/unfollow/${id}`, \"POST\").then((json) => console.log(json));\n  };\n\n  const setOrderedTweets = (tweets, direction = 1) => {\n    const t = tweets.sort((a, b) => {\n      return new Date(a.created).getTime() < new Date(b.created).getTime()\n        ? direction\n        : -direction;\n    });\n    setTweets(t);\n  };\n  return (\n    <div>\n      <div>\n        <Card>\n          <Card.Img\n            variant=\"top\"\n            src=\"https://source.unsplash.com/1600x900/?nature\"\n          />\n          <Card.Body>\n            <Image\n              style={{ width: 30, height: 30 }}\n              className=\"mr-2\"\n              src={avatar}\n              roundedCircle\n            />\n            <Card.Title> {username.split(\"@\")[0]} </Card.Title>\n            <Card.Text> followers: {followersCount}</Card.Text>\n            <Button variant=\"primary\" onClick={triggerFollow}>\n              {alreadyFollowed ? \"unfollow\" : \"Follow\"}\n            </Button>\n          </Card.Body>\n        </Card>\n      </div>\n      {tweets.map((tweetsitem) => (\n        <TweetCard tweetsitem={tweetsitem} key={tweetsitem.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default Profilelist;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Navbar from \"./Navbar\";\nimport UserList from \"./UserList\";\nimport { useParams } from \"react-router-dom\";\nimport ProfileList from \"./ProfileList\";\nimport SearchBar from \"./SearchBar\";\nimport TrendList from \"./TrendList\";\nimport ApiUtils from \"./ApiUtils\";\n\nconst Profile = () => {\n  const [tweetList, setTweetList] = useState([]);\n  const { q } = useParams();\n\n  const fetchTweets = () => {\n    if (q) {\n      ApiUtils(`tweets/tag/${q}`).then((json) => {\n        setTweetList(json);\n      });\n    } else {\n      ApiUtils(\"tweets/feed\").then((json) => {\n        setTweetList(json);\n      });\n    }\n  };\n  \n  useEffect(() => {\n    fetchTweets();\n  }, [q]);\n\n  const { id } = useParams();\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col md={2} sm={1} xs={2}>\n            <Navbar />\n          </Col>\n          <Col md={6} sm={8} xs={10}>\n            <ProfileList id={id} />\n          </Col>\n          <Col md={4} className=\"d-none d-md-block d-lg-block\">\n            <div className=\"mb-4\">\n              <SearchBar />\n            </div>\n            <div className=\"mb-4\">\n              <TrendList tweetList={tweetList} />\n            </div>\n            <div>\n              <UserList />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nexport default function NotFound() {\n    return (\n        <div>Ooops!</div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/private/Home\";\nimport LandingPage from \"./components/public/LandingPage\";\nimport Profile from \"./components/private/Profile\";\nimport NotFound from \"./components/public/NotFound\";\nimport { AuthProvider } from \"./hooks/UseAuth\";\n\nexport default function RouterConfig() {\n  return (\n    <AuthProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/profile/:id\">\n            <Profile />\n          </Route>\n          <Route path=\"/search/:q\">\n            <Home />\n          </Route>\n          <Route exact path=\"/\">\n            <LandingPage />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n","import RouterConfig from './RouterConfig';\n\n// CSS & JS\nimport './App.scss';\nimport moment from \"moment\";\nimport 'moment/locale/it'\nmoment.locale('it');\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <RouterConfig/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}